OLDER:

public class MyActor extends UntypedActor {
    @Override
    public void onReceive(Object message) throws Throwable {
        if (message instanceof String) {
            System.out.println("Received String message: " + message);
        } else {
            unhandled(message);
        }
    }
}

NEW APPROACH:

import akka.actor.AbstractActor;
import akka.actor.Props;

public class MyActor extends AbstractActor {

    // Define message handling
    @Override
    public Receive createReceive() {
        return receiveBuilder()
            .match(String.class, message -> {
                System.out.println("Received String message: " + message);
            })
            .matchAny(message -> {
                unhandled(message);
            })
            .build();
    }

    // Optional: Define how to create the actor
    public static Props props() {
        return Props.create(MyActor.class);
    }
}

const BATCH_SIZE = 1000;

// Step 1: Get all COMPLETED masterRequestIds from dbsync_queue
const completedMasterIds = db.dbsync_queue
  .find({ status: "COMPLETED" })
  .project({ masterRequestId: 1, _id: 0 })
  .toArray()
  .map(doc => doc.masterRequestId);

const masterIdDocs = db.master_change_request.aggregate([
  {
    $match: {
      marge_request: { $in: ["MERGE_COMPLETED", "REPLICATION_COMPLETED"] },
      _id: { $nin: completedMasterIds }
    }
  },
  {
    $project: { masterRequestId: "$_id" }
  },
  {
    $unionWith: {
      coll: "dbsync_queue",
      pipeline: [
        { $match: { status: "COMPLETED" } },
        { $project: { masterRequestId: 1 } }
      ]
    }
  },
  {
    $group: { _id: "$masterRequestId" } // Remove duplicates
  },
  {
    $sort: { _id: 1 }
  },
  {
    $limit: BATCH_SIZE
  }
]).toArray();

const masterIds = masterIdDocs.map(doc => doc._id);
print("âœ… Fetched masterIds:", masterIds);
